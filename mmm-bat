#!/bin/bash

# mmm-bat, Copyright (C) 2013-2014 Jinseop Kim(vmfhrmfoaj@yahoo.com)
# mmm-bat comes with ABSOLUTELY NO WARRANTY; for details
# type LICENSE file.  This is free software, and you are welcome
# to redistribute it under certain conditions; type LICENSE
# for details.
# If the LICENSE file does not exist,
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

. mmm-bat.sh

# configureations
build_log_file="mmm.log"
script_file="push.bat"

#
# functions
#
function helpUsage() {
  echo    "Usage:"
  echo    "    $0 [dir] [product name] [-a]?"
  echo    "    - dir: path for build"
  echo    "           e.g) hardware/qcom/camera"
  echo    "    - product name: product string for mmm-build."
  echo -n "                    If the product name is \"custom\", "
  echo                        "we to execute the \"mmm-bat-custom.sh\" file."
  echo    ""
  echo    "  Optional:"
  echo    "    - append mode(-a): To accumulate a push list."
}

# init
relative_target_path=$1
product_name=$2
is_accumulation_mode=$3

cur_dir=`pwd`

# change working dir and adjust target path.
absolute_target_path=$(pwd)/${relative_target_path}
target_path=$(getTargetPath ${absolute_target_path})
root_dir=$(getRootPath ${absolute_target_path})
if [ ! -d ${root_dir} ]; then
  echo "Can not find the Android directory."
  echo "-  [DEBUG] relative_target_path: \"${relative_target_path}\""
  echo "-  [DEBUG] absolute_target_path: \"${absolute_target_path}\""
  echo "-  [DEBUG] target_path: \"${target_path}\""
  echo "-  [DEBUG] root_path: \"${root_path}\""
  echo ""
  helpUsage
  exit -1
else
  # for mmm-build
  cd ${root_dir}
fi

# check param
is_valid=$(checkParams ${target_path} ${product_name})
if [ ${is_valid} == "INVALID" ]; then
  helpUsage
  exit -1
fi

# log header
writeLog "---------------------------------------------------------------------"
writeLog "Date: $(date)"
writeLog "Product: ${product_name}"
writeLog "Path: ${target_path}"
writeLog "Build directory ${cur_dir}"

# build & generate push script
if [ -z "${is_accumulation_mode}" ]; then
  build ${target_path} ${product_name} ${build_log_file} ${script_file}
else
  build ${target_path} ${product_name} ${build_log_file} ${script_file} ${script_file}
fi

# return current directory
cd ${cur_dir}
